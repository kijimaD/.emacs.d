#s(persp--state-complete ("/home/kijima/roam/20210508234743-emacs.org" "/home/kijima/roam/20210508233810-roam.org" "/home/kijima/roam/20210509095513-ruby.org" "/home/kijima/roam/20210509095946-rails.org" "/home/kijima/roam/20210509101246-program.org" "/home/kijima/roam/20210509100112-js.org" "/home/kijima/roam/20210509122633-emacs_lisp.org" "/home/kijima/Dropbox/junk/diary/org-journal/20210509.org" "/home/kijima/Dropbox/junk/diary/org-journal/20210508.org" "/home/kijima/Dropbox/junk/2019/2019-11-26-152054.org" "/home/kijima/Dropbox/junk/2020/2020-04-16-185013.org" "/home/kijima/Dropbox/handbook/README.md" "~/Dropbox/handbook/" "/home/kijima/.textlintrc" "/home/kijima/.emacs.d/conf/org-init.el" "/home/kijima/.emacs.d/Cask" "/home/kijima/.emacs.d/conf/rails-init.el" "/home/kijima/.emacs.d/conf/theme-init.el" "/home/kijima/.emacs.d/conf/package-init.el" "/home/kijima/.emacs.d/conf/helm-init.el" "/home/kijima/.emacs.d/.gitignore" "/home/kijima/.emacs.d/conf/local-init-example.el" "/home/kijima/Project/well-grounded-rubyist/CH10/12sort.rb" "/home/kijima/Dropbox/handbook/docs/index.md" "/home/kijima/Dropbox/junk/diary/org-journal/20210409.md" "/home/kijima/Dropbox/junk/diary/org-journal/20210408.md" "/home/kijima/Dropbox/junk/diary/org-journal/20210413.md" "/home/kijima/Dropbox/junk/2020/univ_paper/_build/latex/sphinx.sty" "/home/kijima/.emacs.d/.github/workflows/test.yml" "/home/kijima/.emacs.d/README.md" "/home/kijima/.emacs.d/.mc-lists.el" "/home/kijima/Downloads/The Well-Grounded Rubyist by David A. Black (z-lib.org).pdf" "~/Dropbox/handbook/docs/" "/home/kijima/Project/emacs/ChangeLog.1" "/home/kijima/Project/emacs/lisp/net/eww.el" "/home/kijima/Project/emacs/.clang-format" "/home/kijima/.emacs.d/.cask/27.1/elpa/helm-core-20210425.1928/helm.el" "/home/kijima/.emacs.d/.cask/27.1/elpa/archives/melpa/archive-contents" "/home/kijima/.emacs.d/.cask/27.1/elpa/archives/marmalade/archive-contents" "/home/kijima/Project/melpa/recipes/create-link" "/home/kijima/Project/create-link/create-link.el" "~/Project/create-link/" "/home/kijima/Project/emacs/.dir-locals.el" "/home/kijima/Project/emacs/lisp/emacs-lisp/ring.el" "/home/kijima/Project/emacs/src/lisp.h" "/home/kijima/.emacs.d/.cask/27.1/elpa/git-link-20210318.313/git-link.el" "/home/kijima/Project/emacs/ChangeLog.2" "/home/kijima/Project/emacs/ChangeLog.3" "/home/kijima/.emacs.d/.cask/27.1/elpa/writeroom-mode-20201229.2242/writeroom-mode.el" "/home/kijima/.emacs.d/.cask/27.1/elpa/writeroom-mode-20201229.2242/writeroom-mode-autoloads.el" "/home/kijima/.emacs.d/.cask/27.1/elpa/writeroom-mode-20201229.2242/writeroom-mode-pkg.el" "~/" "/home/kijima/.elfeed/index" "/home/kijima/.emacs.d/bookmarks") (#s(persp--state-frame #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("1" #s(persp--state-single ("20210508.org" "2019-11-26-152054.org" "2020-04-16-185013.org" "20210509.org" "README.md<handbook>" "handbook" ".textlintrc" "org-init.el" "Cask" "rails-init.el" "theme-init.el" "package-init.el" "helm-init.el" ".gitignore" "local-init-example.el" "12sort.rb" "index.md" "20210409.md" "20210408.md" "20210413.md" "sphinx.sty" "test.yml" "README.md<.emacs.d>" ".mc-lists.el" "The Well-Grounded Rubyist by David A. Black (z-lib.org).pdf" "docs" "ChangeLog.1" "eww.el" ".clang-format" "helm.el" "archive-contents<melpa>" "archive-contents<marmalade>" "create-link<recipes>") (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 192) (min-pixel-width . 210) (min-pixel-height-ignore . 144) (min-pixel-width-ignore . 84) (min-pixel-height-safe . 48) (min-pixel-width-safe . 42)) leaf (pixel-width . 3840) (pixel-height . 2052) (total-width . 183) (total-height . 42) (normal-height . 1.0) (normal-width . 1.0) (buffer "20210509.org" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins 1) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 332) (start . 1)) (prev-buffers ("20210509.org" 1 332) ("20210508.org" 1 1213) ("20210413.md" 1 1) ("20210408.md" 1004 1004) ("20210409.md" 1562 2677) ("2020-04-16-185013.org" 34062 34700) ("sphinx.sty" 60917 61582) ("2019-11-26-152054.org" 1296 1441) ("*scratch*" 1 1) ("*scratch* (2)" 1 1)))) "2" #s(persp--state-single ("20210508233810-roam.org" "20210508234743-emacs.org" "20210509095513-ruby.org" "20210509095946-rails.org" "20210509101246-program.org" "20210509100112-js.org" "20210509122633-emacs_lisp.org" "20210509.org") (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 192) (min-pixel-width . 420) (min-pixel-height-ignore . 144) (min-pixel-width-ignore . 168) (min-pixel-height-safe . 48) (min-pixel-width-safe . 84)) hc (pixel-width . 3840) (pixel-height . 2052) (total-width . 183) (total-height . 42) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 1911) (pixel-height . 2052) (total-width . 91) (total-height . 42) (normal-height . 1.0) (normal-width . 0.49765625) (buffer "20210508234743-emacs.org" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins 1) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 147) (start . 1)) (prev-buffers ("20210508234743-emacs.org" 1 147) ("20210509100112-js.org" 1 13) ("20210509122633-emacs_lisp.org" 760 4839) ("20210508233810-roam.org" 1 349) ("20210509101246-program.org" 1 57) ("20210509095513-ruby.org" 1 20) ("20210509095946-rails.org" 1 43))) (leaf (last . t) (pixel-width . 1929) (pixel-height . 2052) (total-width . 92) (total-height . 42) (normal-height . 1.0) (normal-width . 0.50234375) (buffer "20210509122633-emacs_lisp.org" (selected) (hscroll . 0) (fringes 8 8 nil nil) (margins 1) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 4754) (start . 4207)) (prev-buffers ("20210509122633-emacs_lisp.org" 4221 4754) ("20210508233810-roam.org" 1 231) ("20210509.org" 1 31) ("20210509101246-program.org" 1 67) ("20210509100112-js.org" 1 13) ("20210509095946-rails.org" 1 31) ("20210509095513-ruby.org" 1 11) ("20210508234743-emacs.org" 1 742))))) "3" #s(persp--state-single nil (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 7) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 192) (min-pixel-width . 420) (min-pixel-height-ignore . 144) (min-pixel-width-ignore . 147) (min-pixel-height-safe . 48) (min-pixel-width-safe . 84)) hc (pixel-width . 3840) (pixel-height . 2052) (total-width . 183) (total-height . 42) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 1911) (pixel-height . 2052) (total-width . 91) (total-height . 42) (normal-height . 1.0) (normal-width . 0.49765625) (buffer "*scratch* (3)" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)) (prev-buffers ("*scratch* (3)" 1 1) ("*scratch* (2)" 1 1) ("*scratch* (4)" 1 1))) (leaf (last . t) (pixel-width . 1929) (pixel-height . 2052) (total-width . 92) (total-height . 42) (normal-height . 1.0) (normal-width . 0.50234375) (buffer "*scratch* (3)" (selected) (hscroll . 0) (fringes 8 8 nil nil) (margins 1) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)) (prev-buffers ("*scratch* (3)" 1 1))))) "4" #s(persp--state-single ("The Well-Grounded Rubyist by David A. Black (z-lib.org).pdf" "12sort.rb") (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 7) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 192) (min-pixel-width . 420) (min-pixel-height-ignore . 144) (min-pixel-width-ignore . 147) (min-pixel-height-safe . 48) (min-pixel-width-safe . 84)) hc (pixel-width . 3840) (pixel-height . 2052) (total-width . 183) (total-height . 42) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 1911) (pixel-height . 2052) (total-width . 91) (total-height . 42) (normal-height . 1.0) (normal-width . 0.49765625) (buffer "*scratch* (4)" (selected) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)) (next-buffers "*scratch* (4)" "The Well-Grounded Rubyist by David A. Black (z-lib.org).pdf") (prev-buffers ("*scratch* (4)" 1 1) ("The Well-Grounded Rubyist by David A. Black (z-lib.org).pdf" 1 1) ("*scratch* (3)" 1 1) ("*scratch* (5)" 1 1))) (leaf (last . t) (pixel-width . 1929) (pixel-height . 2052) (total-width . 92) (total-height . 42) (normal-height . 1.0) (normal-width . 0.50234375) (buffer "12sort.rb" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins 1) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 216) (start . 1)) (prev-buffers ("*scratch* (3)" 1 1) ("12sort.rb" 1 216) ("*scratch* (4)" 1 1))))) "5" #s(persp--state-single ("kijima" "20210509.org") (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 6) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 192) (min-pixel-width . 420) (min-pixel-height-ignore . 144) (min-pixel-width-ignore . 126) (min-pixel-height-safe . 48) (min-pixel-width-safe . 84)) hc (pixel-width . 3840) (pixel-height . 2052) (total-width . 183) (total-height . 42) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 1911) (pixel-height . 2052) (total-width . 91) (total-height . 42) (normal-height . 1.0) (normal-width . 0.49765625) (buffer "*scratch* (5)" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)) (prev-buffers ("*scratch* (5)" 1 1) ("20210509.org" 1 31) ("*scratch* (4)" 1 1) ("*scratch* (6)" 1 1))) (leaf (last . t) (pixel-width . 1929) (pixel-height . 2052) (total-width . 92) (total-height . 42) (normal-height . 1.0) (normal-width . 0.50234375) (buffer "*scratch* (5)" (selected) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)) (prev-buffers ("*scratch* (5)" 1 1))))) "6" #s(persp--state-single ("Cask" "theme-init.el" "org-init.el" "index" "package-init.el" "bookmarks" "helm-init.el" ".gitignore" "20210509095946-rails.org" "local-init-example.el" "rails-init.el" "12sort.rb") (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 192) (min-pixel-width . 420) (min-pixel-height-ignore . 144) (min-pixel-width-ignore . 168) (min-pixel-height-safe . 48) (min-pixel-width-safe . 84)) hc (pixel-width . 3840) (pixel-height . 2004) (total-width . 183) (total-height . 42) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 1911) (pixel-height . 2004) (total-width . 91) (total-height . 42) (normal-height . 1.0) (normal-width . 0.49765625) (buffer "package-init.el" (selected) (hscroll . 0) (fringes 8 8 nil nil) (margins 1) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 2979) (start . 2238)) (prev-buffers ("org-init.el" 314 858) ("package-init.el" 2667 2951) ("Cask" 5567 5873) ("theme-init.el" 1 592) ("12sort.rb" 1 216) ("rails-init.el" 4894 5511) ("local-init-example.el" 1 588) (".gitignore" 1 37) ("bookmarks" 1 257) ("helm-init.el" 1 366) ("*scratch* (6)" 1 1) ("*scratch* (7)" 1 1))) (leaf (last . t) (pixel-width . 1929) (pixel-height . 2004) (total-width . 92) (total-height . 42) (normal-height . 1.0) (normal-width . 0.50234375) (buffer "Cask" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins 1) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 5907) (start . 5271)) (prev-buffers ("Cask" 5271 5907) ("local-init-example.el" 1 588) ("org-init.el" 1617 2416) ("package-init.el" 5480 5965) ("20210509095946-rails.org" 1 1) ("*scratch* (5)" 1 1) ("*scratch* (6)" 1 1) ("theme-init.el" 1 1) ("index" 1 1))))) "7" #s(persp--state-single ("eww.el" ".clang-format" "helm.el" "archive-contents<melpa>" "archive-contents<marmalade>" ".dir-locals.el" "ring.el" "lisp.h" "git-link.el" "ChangeLog.2" "ChangeLog.3" "writeroom-mode.el" "writeroom-mode-autoloads.el" "writeroom-mode-pkg.el") (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 8) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 192) (min-pixel-width . 420) (min-pixel-height-ignore . 144) (min-pixel-width-ignore . 168) (min-pixel-height-safe . 48) (min-pixel-width-safe . 84)) hc (pixel-width . 3840) (pixel-height . 2052) (total-width . 183) (total-height . 42) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 1911) (pixel-height . 2052) (total-width . 91) (total-height . 42) (normal-height . 1.0) (normal-width . 0.49765625) (buffer "helm.el" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins 1) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)) (prev-buffers ("*scratch* (6)" 1 1) ("helm.el" 1 1) ("*scratch* (8)" 1 1) ("writeroom-mode.el" 427 1831) ("ring.el" 1673 1745) ("*scratch* (7)" 1 1) ("writeroom-mode-pkg.el" 1 1) ("*helm find files*" 1 1) ("archive-contents<melpa>" 3136 3153) ("archive-contents<marmalade>" 1 1) ("writeroom-mode-autoloads.el" 1 1))) (leaf (last . t) (pixel-width . 1929) (pixel-height . 2052) (total-width . 92) (total-height . 42) (normal-height . 1.0) (normal-width . 0.50234375) (buffer "lisp.h" (selected) (hscroll . 0) (fringes 8 8 nil nil) (margins 1) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 45503) (start . 44900)) (prev-buffers ("lisp.h" 44900 45503) ("eww.el" 1 1) ("ChangeLog.3" 2275246 2275581) ("ChangeLog.2" 476490 476908) ("ring.el" 1673 1745) ("git-link.el" 20846 21737) (".dir-locals.el" 1 454) ("*scratch* (6)" 1 1) (".clang-format" 1 1) ("*scratch* (7)" 1 1))))) "8" #s(persp--state-single ("create-link<Project>" "create-link.el") (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 7) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 192) (min-pixel-width . 420) (min-pixel-height-ignore . 144) (min-pixel-width-ignore . 147) (min-pixel-height-safe . 48) (min-pixel-width-safe . 84)) hc (pixel-width . 3840) (pixel-height . 2052) (total-width . 183) (total-height . 42) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 1911) (pixel-height . 2052) (total-width . 91) (total-height . 42) (normal-height . 1.0) (normal-width . 0.49765625) (buffer "create-link.el" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins 1) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 2412) (start . 2412)) (prev-buffers ("*scratch* (7)" 1 1) ("create-link.el" 2412 2412) ("create-link<Project>" 1 238) ("*scratch* (8)" 1 1) ("*scratch* (9)" 1 1))) (leaf (last . t) (pixel-width . 1929) (pixel-height . 2052) (total-width . 92) (total-height . 42) (normal-height . 1.0) (normal-width . 0.50234375) (buffer "*scratch* (8)" (selected) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)) (prev-buffers ("*scratch* (7)" 1 1) ("*scratch* (8)" 1 1))))) "9" #s(persp--state-single nil (((min-height . 4) (min-width . 20) (min-height-ignore . 3) (min-width-ignore . 6) (min-height-safe . 1) (min-width-safe . 4) (min-pixel-height . 192) (min-pixel-width . 420) (min-pixel-height-ignore . 144) (min-pixel-width-ignore . 126) (min-pixel-height-safe . 48) (min-pixel-width-safe . 84)) hc (pixel-width . 3840) (pixel-height . 2052) (total-width . 183) (total-height . 42) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 1911) (pixel-height . 2052) (total-width . 91) (total-height . 42) (normal-height . 1.0) (normal-width . 0.49765625) (buffer "*scratch* (9)" (selected . t) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 1) (start . 1)) (prev-buffers ("*scratch* (9)" 1 1) ("*scratch* (8)" 1 1))) (leaf (last . t) (pixel-width . 1929) (pixel-height . 2052) (total-width . 92) (total-height . 42) (normal-height . 1.0) (normal-width . 0.50234375) (buffer "*scratch* (9)" (selected) (hscroll . 0) (fringes 8 8 nil nil) (margins nil) (scroll-bars nil 0 t nil 0 t nil) (vscroll . 0) (dedicated) (point . 1) (start . 1))))))) ("1" "2" "3" "4" "5" "6" "7" "8" "9"))))